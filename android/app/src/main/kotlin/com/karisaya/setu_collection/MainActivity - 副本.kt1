package com.karisaya.setu_collection

import android.Manifest
import android.content.pm.PackageManager
import android.os.Environment
import androidx.core.app.ActivityCompat
import androidx.core.content.ContextCompat
import io.flutter.embedding.android.FlutterActivity
import io.flutter.embedding.engine.FlutterEngine
import io.flutter.plugin.common.MethodChannel

class MainActivity : FlutterActivity() {

    private val requiredPermissions =
            arrayOf(
                    Manifest.permission.READ_EXTERNAL_STORAGE,
                    Manifest.permission.WRITE_EXTERNAL_STORAGE
            )

    private fun checkAndRequestPermissions() {
        val missingPermissions =
                requiredPermissions.filter {
                    ContextCompat.checkSelfPermission(this, it) != PackageManager.PERMISSION_GRANTED
                }
        if (missingPermissions.isEmpty()) return
        ActivityCompat.requestPermissions(this, missingPermissions.toTypedArray(), 1001)
    }

    override fun configureFlutterEngine(flutterEngine: FlutterEngine) {
        super.configureFlutterEngine(flutterEngine)
        MethodChannel(
                        flutterEngine.dartExecutor.binaryMessenger,
                        "com.karisaya.setu_collection/publicDirectory",
                )
                .setMethodCallHandler { call, result ->
                    when (call.method) {
                        "Picture" -> {
                            checkAndRequestPermissions()
                            if (requiredPermissions.any {
                                        ContextCompat.checkSelfPermission(this, it) !=
                                                PackageManager.PERMISSION_GRANTED
                                    }
                            ) {
                                result.error("Permissions Error", "用户拒绝了权限", null)
                                return@setMethodCallHandler
                            }
                            result.success(
                                    Environment.getExternalStoragePublicDirectory(
                                                    Environment.DIRECTORY_PICTURES
                                            )
                                            .toString()
                            )
                        }
                    }
                }
    }
}
